/*CRIE UM TRIGGER QUE, SEMPRE QUE HOUVER DECREMENTO DA QUANTIDADE EM ESTOQUE DE UM DETERMINADO PRODUTO, 
DECREMENTE TAMBÉM, CASO SEJA NECESSÁRIO, A QUANTIDADE EM ESTOQUE DO PRODUTOS QUE SÃO COMPOSTOS POR AQUELE QUE FOI DECREMENTADO.*/

CREATE OR REPLACE FUNCTION decrementar_produto() 
RETURNS TRIGGER AS
$$
BEGIN
    UPDATE PEDIDO 
    SET VALOR_TOTAL_PEDIDO = (
        SELECT SUM(IP.QTD_ITENS * P.PRECO)
        FROM ITEM_PEDIDO AS IP 
        JOIN PRODUTO AS P ON IP.COD_PRODUTO = P.COD_PRODUTO
        WHERE IP.COD_PEDIDO = NEW.COD_PEDIDO
    ),
    QTD_ITENS_PEDIDOS = (
        SELECT SUM(IP.QTD_ITENS)
        FROM ITEM_PEDIDO AS IP
        WHERE IP.COD_PEDIDO = NEW.COD_PEDIDO
    )
    WHERE COD_PEDIDO = NEW.COD_PEDIDO;
    
    UPDATE PRODUTO 
    SET QTD_EM_ESTOQUE = QTD_EM_ESTOQUE - NEW.QTD_ITENS
    WHERE COD_PRODUTO = NEW.COD_PRODUTO;

	UPDATE COMBOS
    SET QTD_DE_COMBOS_POSSIVEIS = QTD_DE_COMBOS_POSSIVEIS - NEW.QTD_ITENS
    WHERE COD_COMBO IN (
        SELECT COD_COMBO
        FROM COMBO_PRODUTO
        WHERE COD_PRODUTO = NEW.COD_PRODUTO
    );
	
    RETURN NULL;
END;
$$ LANGUAGE plpgsql;

CREATE TABLE PRODUTO (
    COD_PRODUTO SERIAL PRIMARY KEY, 
    NOME VARCHAR(20), 
    PRECO INT, 
    QTD_EM_ESTOQUE INT
);

INSERT INTO PRODUTO (NOME, PRECO, QTD_EM_ESTOQUE)
VALUES
('HAMBURGUER', 30, 10),
('REFRIGERANTE', 10, 10),
('BATATA FRITA', 10, 10);

CREATE TABLE COMBOS (
    COD_COMBO SERIAL PRIMARY KEY, 
    NOME VARCHAR(30), 
    PRECO INT, 
    QTD_DE_COMBOS_POSSIVEIS INT
);

INSERT INTO COMBOS (NOME, PRECO, QTD_DE_COMBOS_POSSIVEIS)
VALUES
('COMBO 1', 35, 10),
('COMBO 2', 42, 10);

CREATE TABLE COMBO_PRODUTO (
    COD_COMBO INT,
    COD_PRODUTO INT,
    FOREIGN KEY (COD_COMBO) REFERENCES COMBOS(COD_COMBO),
    FOREIGN KEY (COD_PRODUTO) REFERENCES PRODUTO(COD_PRODUTO)
);

INSERT INTO COMBO_PRODUTO (COD_COMBO, COD_PRODUTO)
VALUES
(1, 1), 
(1, 2); 

INSERT INTO COMBO_PRODUTO (COD_COMBO, COD_PRODUTO)
VALUES
(2, 1), 
(2, 2), 
(2, 3);

CREATE TABLE PEDIDO (
    COD_PEDIDO SERIAL PRIMARY KEY, 
    HORA_DATA_PEDIDO TIMESTAMP,
    VALOR_TOTAL_PEDIDO INT,
    QTD_ITENS_PEDIDOS INT
);

CREATE TABLE ITEM_PEDIDO (
    COD_ITEM_PEDIDO SERIAL PRIMARY KEY, 
    COD_PEDIDO INT, 
    COD_PRODUTO INT,
    QTD_ITENS INT,
    FOREIGN KEY (COD_PEDIDO) REFERENCES PEDIDO(COD_PEDIDO),
    FOREIGN KEY (COD_PRODUTO) REFERENCES PRODUTO(COD_PRODUTO)
);

CREATE TRIGGER DECREMENTAR_TRIGGER
AFTER INSERT ON ITEM_PEDIDO
FOR EACH ROW 
EXECUTE FUNCTION decrementar_produto();

SELECT * FROM PRODUTO
SELECT * FROM COMBOS

SELECT * FROM ITEM_PEDIDO
SELECT * FROM PEDIDO

INSERT INTO PEDIDO (HORA_DATA_PEDIDO, VALOR_TOTAL_PEDIDO, QTD_ITENS_PEDIDOS)
VALUES (CURRENT_TIMESTAMP, NULL, NULL);

SELECT * FROM PEDIDO

INSERT INTO ITEM_PEDIDO (COD_PEDIDO, COD_PRODUTO, QTD_ITENS)
VALUES (1, 1, 2)

SELECT * FROM ITEM_PEDIDO
SELECT * FROM PEDIDO

SELECT * FROM PRODUTO
SELECT * FROM COMBOS
